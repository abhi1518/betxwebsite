{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000';\nexport const loginUser = async userData => {\n  const myHeaders = new Headers();\n  myHeaders.append('Content-Type', 'application/json');\n  const raw = JSON.stringify(userData);\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  try {\n    const response = await fetch(`${API_BASE_URL}/login-user`, requestOptions);\n    const result = await response.text();\n    return result;\n  } catch (error) {\n    console.error('Error:', error);\n    throw error;\n  }\n};\nexport const sendOtp = async phoneNumber => {\n  const myHeaders = new Headers();\n  myHeaders.append('Content-Type', 'application/json');\n  const raw = JSON.stringify({\n    phoneNumber\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  try {\n    const response = await fetch(`${API_BASE_URL}/send-otp`, requestOptions);\n    const result = await response.text();\n    return result;\n  } catch (error) {\n    console.error('Error sending OTP:', error);\n    throw error; // Propagate the error for handling in the component\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","loginUser","userData","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","response","fetch","result","text","error","console","sendOtp","phoneNumber"],"sources":["/Users/apple/Desktop/betxwebsite/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000';\n\nexport const loginUser = async (userData) => {\n    const myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'application/json');\n  \n    const raw = JSON.stringify(userData);\n  \n    const requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n    };\n  \n    try {\n      const response = await fetch(`${API_BASE_URL}/login-user`, requestOptions);\n      const result = await response.text();\n      return result;\n    } catch (error) {\n      console.error('Error:', error);\n      throw error;\n    }\n  };\n\n  export const sendOtp = async (phoneNumber) => {\n    const myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'application/json');\n  \n    const raw = JSON.stringify({ phoneNumber });\n  \n    const requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n    };\n  \n    try {\n      const response = await fetch(`${API_BASE_URL}/send-otp`, requestOptions);\n      const result = await response.text();\n      return result;\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      throw error; // Propagate the error for handling in the component\n    }\n  };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAQ,IAAK;EACzC,MAAMC,SAAS,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC/BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAEpD,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC;EAEpC,MAAMO,cAAc,GAAG;IACrBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAER,SAAS;IAClBS,IAAI,EAAEN,GAAG;IACTO,QAAQ,EAAE;EACZ,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEf,YAAa,aAAY,EAAES,cAAc,CAAC;IAC1E,MAAMO,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,OAAO,GAAG,MAAOC,WAAW,IAAK;EAC5C,MAAMlB,SAAS,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC/BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAEpD,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IAAEa;EAAY,CAAC,CAAC;EAE3C,MAAMZ,cAAc,GAAG;IACrBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAER,SAAS;IAClBS,IAAI,EAAEN,GAAG;IACTO,QAAQ,EAAE;EACZ,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEf,YAAa,WAAU,EAAES,cAAc,CAAC;IACxE,MAAMO,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}